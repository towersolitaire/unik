//Задача 1 (виконати без застосування масиву). Числа m, n і k (3≤k≤10)
//вводяться з клавіатури. Згенерувати і вивести на екран m цілих випадкових
//чисел з проміжку, вказаному у пункті а, та n дійсних чисел (виводити на
//екран з вказаною точністю) з проміжку, вказаному у пункті б. Виведення
//на екран здійснювати по k чисел у рядку (m та n мають ділитися на k без
//залишку). a) [-45;45]      b) [-5;0] до тисячних
#include <iostream>
using namespace std;
int main(){
  int m, n, k, i;
  cout<<"Enter k: ";cin >> k;
  cout<<"Enter m: ";cin >> m;
  cout<<"Enter n: ";cin >> n;
  srand(time(NULL));
  if (k<=10 && k>=3){
    cout<<"m: ";
    for (i = 0; i<m; i++) {
      int random_m = -45 + rand() % 91;
      if (i%k!=0) {
        cout << random_m<< " ";
      }
      else {
        cout <<"\n"<< random_m << " ";
      }
      }
    cout<<endl<<endl<<"n: ";
    for (i = 0; i<n; i++) {
      float random_n = -(5.0 + rand() % 5001) / 1000.0;
      if (i%k!=0) {
        cout << random_n<< " ";
      }
      else {
        cout <<"\n"<< random_n << " ";
      }
    }
  }
  else{cout<<"k must be in a range of 3 and 10";}
  return 0;
}

/*
Формалізація лаб 6_1
1. Вхідні дані: m, n, k - вводяться з клавіатури. k в проміжку [3; 10], m та n мають ділитися на k без залишку.
2. Вихідні дані: m цілих випадкових чисел з проміжку [-45; 45], та n дійсних чисел з точністю до тисячних з проміжку [-5; 0].
3. Якщо k в проміжку [3; 10], то:
3.1 в циклі for i від 0 до m з кроком 1 генеруємо випадкове число. Якщо i ділиться на k без остачі, то виводимо це випадкове число. Інакше виводимо його з нового рядка.
3.2 в циклі for i від 0 до n з кроком 1 генеруємо випадкове число. Якщо i ділиться на k без остачі, то виводимо це випадкове число. Інакше виводимо його з нового рядка.
4. Інакше (якщо k не в проміжку [3; 10]), виводимо повідомлення про це.
*/
